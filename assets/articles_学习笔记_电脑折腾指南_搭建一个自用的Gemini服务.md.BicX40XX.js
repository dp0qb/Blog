import{_ as e,c as t,o as a,a4 as r}from"./chunks/framework.D0jSIsaT.js";const o="/assets/fork.DibuAGrb.png",i="/assets/createFork.DXRdaOdX.png",s="/assets/loginVercel.CPFiwwOu.png",p="/assets/addNewProject.Bpb00BZX.png",n="/assets/importProject.CAxkJ3TV.png",l="/assets/deployProject.C_iEFKgE.png",c="/assets/Dashboard.B6kUfcHt.png",h="/assets/deployment.BTlG8CG_.png",m="/assets/getDomin.7uvkHwOM.png",_="/assets/searchDomin.DN7KK5np.png",C=JSON.parse('{"title":"自用Gemini搭建流程","description":"","frontmatter":{},"headers":[],"relativePath":"articles/学习笔记/电脑折腾指南/搭建一个自用的Gemini服务.md","filePath":"articles/学习笔记/电脑折腾指南/搭建一个自用的Gemini服务.md"}'),u={name:"articles/学习笔记/电脑折腾指南/搭建一个自用的Gemini服务.md"},g=r('<h1 id="自用gemini搭建流程" tabindex="-1">自用Gemini搭建流程 <a class="header-anchor" href="#自用gemini搭建流程" aria-label="Permalink to &quot;自用Gemini搭建流程&quot;">​</a></h1><div class="danger custom-block"><p class="custom-block-title">声明</p><h4 id="⚠️-本文内容仅供学习交流使用-请勿用于违法用途" tabindex="-1">⚠️ 本文内容仅供学习交流使用，请勿用于违法用途！ <a class="header-anchor" href="#⚠️-本文内容仅供学习交流使用-请勿用于违法用途" aria-label="Permalink to &quot;⚠️ 本文内容仅供学习交流使用，请勿用于违法用途！&quot;">​</a></h4><br></div><p>由于Openai的ChatGPT和谷歌的Gemini都不对中国大陆开放，因而使用这两家的服务要依靠科学上网环境，且对代理服务器ip有一定要求。笔者本人之前就经常遇到节点被ban而无法访问的问题。好在我们可以用一些小技巧绕过这些限制——先用国外未被ban的服务器访问Gemini，然后再用其向我们提供服务。本教程将详细介绍如何搭建一个不用科学上网即可访问的Gemini服务。</p><h2 id="_1-准备工作" tabindex="-1">1. 准备工作 <a class="header-anchor" href="#_1-准备工作" aria-label="Permalink to &quot;1. 准备工作&quot;">​</a></h2><p>虽然本教程旨在摆脱科学上网的限制，但搭建过程还是难免要用到相关工具。 这里推荐用Clash Verge：</p><p><a href="https://github.com/clash-verge-rev/clash-verge-rev/releases/" target="_blank" rel="noreferrer">https://github.com/clash-verge-rev/clash-verge-rev/releases/</a></p><p>该界面内有对于各个版本的具体介绍，根据自己设备的实际情况和需求下载对应版本即可。</p><p>节点（内容敏感，请自行学习如何使用）：</p><p><a href="https://freenode.openrunner.net/uploads/20240612-clash.yaml" target="_blank" rel="noreferrer">https://freenode.openrunner.net/uploads/20240612-clash.yaml</a></p><p>如节点不可用，进入节点编辑界面将链接中的日期改成前一天的日期（当天的节点不一定已经更新了），然后更新订阅即可。 选择一个美国的节点，开启系统代理。</p><h2 id="_2-申请谷歌gemini服务api-key" tabindex="-1">2. 申请谷歌Gemini服务api key <a class="header-anchor" href="#_2-申请谷歌gemini服务api-key" aria-label="Permalink to &quot;2. 申请谷歌Gemini服务api key&quot;">​</a></h2><p>接下来我们可以申请Gemini的api key了：<a href="https://aistudio.google.com/app/apikey" target="_blank" rel="noreferrer">https://aistudio.google.com/app/apikey</a></p><h2 id="_3-部署github项目" tabindex="-1">3. 部署Github项目 <a class="header-anchor" href="#_3-部署github项目" aria-label="Permalink to &quot;3. 部署Github项目&quot;">​</a></h2><p>首先注册一个Github账号：</p><p><a href="https://github.com" target="_blank" rel="noreferrer">https://github.com</a></p><p>进入网站后点击右上角&quot;Sign up&quot;，用邮箱注册即可。此过程较为简单，不在此赘述。 接下来访问此项目：</p><p><a href="https://github.com/babaohuang/GeminiProChat" target="_blank" rel="noreferrer">https://github.com/babaohuang/GeminiProChat</a></p><p>点击&quot;fork&quot;按钮，在Repository name中可以任意起名（保持默认即可），然后点击&quot;Create fork&quot;，即可创建一个fork。</p><p><img src="'+o+'" alt=""></p><p><img src="'+i+'" alt=""></p><p>创建完fork后，我们可以在自己的仓库看到 GeminiProChat 项目了。 我们利用Vercel部署该项目，该网站提供免费的国外服务器，且操作简单，完美满足我们的需求。 Vercel网址：<a href="https://vercel.com/login" target="_blank" rel="noreferrer">https://vercel.com/login</a> 用Github账号授权登录vercel，可以很方便地导入Github上的项目。</p><p><img src="'+s+'" alt=""></p><p>在Vercel首页点击&quot;Add New...&quot;下的&quot;Project&quot;，将跳转到导入Git仓库界面。</p><p><img src="'+p+'" alt=""></p><p>在该界面找到我们刚刚fork过来的项目，点击&quot;import&quot;即可导入。</p><p><img src="'+n+'" alt=""></p><p>在Environment Variables中，填入Key：&quot;GEMINI_API_KEY&quot;,Value：&quot;此处填入刚刚申请的api key&quot;，点击&quot;Add&quot;按钮，最后点击&quot;Deploy&quot;。</p><p><img src="'+l+'" alt=""></p><p>耐心等待部署，一般一分钟左右即可完成。看到如下界面即说明部署成功，此时点击&quot;Continue to Dashboard&quot;按钮跳转到控制面板。</p><p><img src="'+c+'" alt=""></p><p>此时Vercel已经为我们分配了一个链接，点击这个链接或&quot;Visit&quot;按钮即可访问Gemini了。不过现在这个链接还不能直接在国内访问。我们需要自己准备一个国内能够访问的域名，使其正确解析这个网址才行。</p><p><img src="'+h+'" alt=""></p><h2 id="_4-购买域名" tabindex="-1">4. 购买域名 <a class="header-anchor" href="#_4-购买域名" aria-label="Permalink to &quot;4. 购买域名&quot;">​</a></h2><p>国内在阿里云和腾讯云登平台购买域名均可，笔者是在阿里云购买的：<a href="https://www.aliyun.com/" target="_blank" rel="noreferrer">https://www.aliyun.com/</a><img src="'+m+'" alt=""></p><p><img src="'+_+'" alt=""></p><h2 id="_5-设置域名解析" tabindex="-1">5. 设置域名解析 <a class="header-anchor" href="#_5-设置域名解析" aria-label="Permalink to &quot;5. 设置域名解析&quot;">​</a></h2><p>我们使用CloudFlare托管域名，并设置域名解析。</p>',37),d=[g];function b(f,q,k,G,P,v){return a(),t("div",null,d)}const V=e(u,[["render",b]]);export{C as __pageData,V as default};
