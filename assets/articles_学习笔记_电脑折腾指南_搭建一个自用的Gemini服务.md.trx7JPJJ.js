import{_ as t,c as e,o as r,a4 as a}from"./chunks/framework.DrCKO7Ve.js";const s="/assets/fork.DibuAGrb.png",o="/assets/createFork.DXRdaOdX.png",n="/assets/loginVercel.CPFiwwOu.png",p="/assets/addNewProject.Bpb00BZX.png",i="/assets/importProject.CAxkJ3TV.png",l="/assets/deployProject.C_iEFKgE.png",c="/assets/Dashboard.B6kUfcHt.png",g="/assets/deployment.BTlG8CG_.png",m="/assets/searchDomin.DN7KK5np.png",_="/assets/addSite.vpk-Wt6c.png",h="/assets/selectPlan.D5ZTw2D9.png",d="/assets/skipAddingDNS.DQxPxQ_z.png",u="/assets/confirmSkip.BCJ85j_b.png",b="/assets/getCloudFlareDNS.ONn6LH8n.png",f="/assets/dominList.Dnkedg7t.png",k="/assets/setDNS.BhLSeQby.png",G="/assets/DNSRecordSetting.lNsyVP-8.png",P="/assets/addNSRecord.DGOKPnu2.png",S="/assets/addCNAMERecord.w_S8uF3T.png",D="/assets/allRecord.BJRMIelg.png",C="/assets/projectDominSet.BXaMEFOp.png",N="/assets/addDomin.Bbb3ejUB.png",R=JSON.parse('{"title":"自用Gemini搭建流程","description":"","frontmatter":{},"headers":[],"relativePath":"articles/学习笔记/电脑折腾指南/搭建一个自用的Gemini服务.md","filePath":"articles/学习笔记/电脑折腾指南/搭建一个自用的Gemini服务.md"}'),y={name:"articles/学习笔记/电脑折腾指南/搭建一个自用的Gemini服务.md"},x=a('<h1 id="自用gemini搭建流程" tabindex="-1">自用Gemini搭建流程 <a class="header-anchor" href="#自用gemini搭建流程" aria-label="Permalink to &quot;自用Gemini搭建流程&quot;">​</a></h1><div class="danger custom-block"><p class="custom-block-title">声明</p><h4 id="⚠️-本文内容仅供学习交流使用-请勿用于违法用途" tabindex="-1">⚠️ 本文内容仅供学习交流使用，请勿用于违法用途！ <a class="header-anchor" href="#⚠️-本文内容仅供学习交流使用-请勿用于违法用途" aria-label="Permalink to &quot;⚠️ 本文内容仅供学习交流使用，请勿用于违法用途！&quot;">​</a></h4><br></div><p><strong>注：本篇还有一个关键问题（反向代理）没有解决，问题是我也忘了当时是怎么解决的了。等我鼓捣出来再补上，目前用本文的方式搭建仍然会提示所在地区无法使用。</strong></p><p>由于Openai的ChatGPT和谷歌的Gemini都不对中国大陆开放，因而使用这两家的服务要依靠科学上网环境，且对代理服务器ip有一定要求。笔者本人之前就经常遇到节点被ban而无法访问的问题。好在我们可以用一些小技巧绕过这些限制——先用国外未被ban的服务器访问Gemini，然后再用其向我们提供服务。本教程将详细介绍如何搭建一个不用科学上网即可访问的Gemini服务。</p><h2 id="_1-准备工作" tabindex="-1">1. 准备工作 <a class="header-anchor" href="#_1-准备工作" aria-label="Permalink to &quot;1. 准备工作&quot;">​</a></h2><p>虽然本教程旨在摆脱科学上网的限制，但搭建过程还是难免要用到相关工具。</p><p>该部分本已写好，不过由于我也不想进橘子喝茶，就请各显神通吧。总之只要有一个能够临时访问Gemini的代理就可以了，搭建完成后即可摆脱该限制。</p><h2 id="_2-申请谷歌gemini服务api-key" tabindex="-1">2. 申请谷歌Gemini服务api key <a class="header-anchor" href="#_2-申请谷歌gemini服务api-key" aria-label="Permalink to &quot;2. 申请谷歌Gemini服务api key&quot;">​</a></h2><p>接下来我们可以申请Gemini的api key了：<a href="https://aistudio.google.com/app/apikey" target="_blank" rel="noreferrer">https://aistudio.google.com/app/apikey</a></p><h2 id="_3-部署github项目" tabindex="-1">3. 部署Github项目 <a class="header-anchor" href="#_3-部署github项目" aria-label="Permalink to &quot;3. 部署Github项目&quot;">​</a></h2><p>首先注册一个Github账号：</p><p><a href="https://github.com" target="_blank" rel="noreferrer">https://github.com</a></p><p>进入网站后点击右上角 <strong>Sign up</strong>，用邮箱注册即可。此过程较为简单，不在此赘述。 接下来访问此项目：</p><p><a href="https://github.com/babaohuang/GeminiProChat" target="_blank" rel="noreferrer">https://github.com/babaohuang/GeminiProChat</a></p><p>点击 <strong>fork</strong> 按钮，在Repository name中可以任意起名（保持默认即可），然后点击 <strong>Create fork</strong>，即可创建一个fork。</p><p><img src="'+s+'" alt=""></p><p><img src="'+o+'" alt=""></p><p>创建完fork后，我们可以在自己的仓库看到 GeminiProChat 项目了。 我们利用Vercel部署该项目，该网站提供免费的国外服务器，且操作简单，完美满足我们的需求。 Vercel网址：</p><p><a href="https://vercel.com/login/" target="_blank" rel="noreferrer">https://vercel.com/login/</a></p><p>用Github账号授权登录vercel，可以很方便地导入Github上的项目。</p><p><img src="'+n+'" alt=""></p><p>在Vercel首页点击 <strong>Add New...</strong> 下的 <strong>Project</strong>，将跳转到导入Git仓库界面。</p><p><img src="'+p+'" alt=""></p><p>在该界面找到我们刚刚fork过来的项目，点击 <strong>import</strong> 即可导入。</p><p><img src="'+i+'" alt=""></p><p>在Environment Variables中，填入Key：<strong>GEMINI_API_KEY</strong>,Value：<strong>此处填入刚刚申请的api key</strong>，点击 <strong>Add</strong> 按钮，最后点击 <strong>Deploy</strong>。</p><p><img src="'+l+'" alt=""></p><p>耐心等待部署，一般一分钟左右即可完成。看到如下界面即说明部署成功，此时点击 <strong>Continue to Dashboard</strong> 按钮跳转到控制面板。</p><p><img src="'+c+'" alt=""></p><p>此时Vercel已经为我们分配了一个链接，点击这个链接或 <strong>Visit</strong> 按钮即可访问Gemini了。不过现在这个链接还不能直接在国内访问。我们需要自己准备一个国内能够访问的域名，使其正确解析这个网址才行。</p><p><img src="'+g+'" alt=""></p><h2 id="_4-获取域名" tabindex="-1">4. 获取域名 <a class="header-anchor" href="#_4-获取域名" aria-label="Permalink to &quot;4. 获取域名&quot;">​</a></h2><p>域名可以购买，也可以免费获得。不过免费获取的操作比较繁琐，如果不是喜欢折腾，还是建议买一个。本文也主要介绍第一种方式。</p><h3 id="_4-1-购买域名" tabindex="-1">4.1 购买域名 <a class="header-anchor" href="#_4-1-购买域名" aria-label="Permalink to &quot;4.1 购买域名&quot;">​</a></h3><p>国内在阿里云和腾讯云登平台购买域名均可，笔者是在阿里云购买的：</p><p><a href="https://www.aliyun.com/" target="_blank" rel="noreferrer">https://www.aliyun.com/</a></p><p>购买域名需要实名认证，按照网站提示完成即可。</p><p>注册完成后搜索自己想要的域名:</p><p><a href="https://wanwang.aliyun.com/domain/" target="_blank" rel="noreferrer">https://wanwang.aliyun.com/domain/</a></p><p><img src="'+m+'" alt=""></p><p>这里建议买一个便宜点的一级域名就行。 比如 <strong>boomer.hi.cn</strong> 这样的是二级域名，而二级域名是有办法免费获取的，还是建议买 <strong>boomer.asia</strong>（只是个帮助理解的例子，实际内容可以根据需求调整）这类一级域名。</p><ul><li>注意：<strong>购买的域名是有期限的。</strong> 如果不确定自己要用多久，挑个便宜的买一年就可以，活动价几块钱就能拿下。</li></ul><h3 id="_4-2-免费域名" tabindex="-1">4.2 免费域名 <a class="header-anchor" href="#_4-2-免费域名" aria-label="Permalink to &quot;4.2 免费域名&quot;">​</a></h3><p>注册Cloudns，每个账号可以获得一个免费的二级域名。但是这个二级域名貌似没法用来解析Vercel挂载的服务。需要自行编译GeminiProChat的项目代码，然后挂载到Github page上，再进行解析。这种方法原理上是能行得通的，不过笔者也尚未尝试，就留给感兴趣的读者尝试吧（或者我什么时候试了再把这部分补上）。</p><h2 id="_5-设置域名解析" tabindex="-1">5. 设置域名解析 <a class="header-anchor" href="#_5-设置域名解析" aria-label="Permalink to &quot;5. 设置域名解析&quot;">​</a></h2><p>我们使用CloudFlare托管域名，并设置域名解析。</p><p>先注册一个CloudFlare账号：</p><p><a href="https://dash.cloudflare.com/" target="_blank" rel="noreferrer">https://dash.cloudflare.com/</a></p><p>然后在账号主页面点击右上角 <strong>添加站点</strong>。</p><p><img src="'+_+'" alt=""></p><p>填入刚刚购买的域名，点击 <strong>继续</strong>。</p><p><img src="'+h+'" alt=""></p><p>选择页面最下方的免费套餐，点击 <strong>继续</strong>。接下来让我们添加DNS记录，我们先跳过。</p><p><img src="'+d+'" alt=""></p><p>如果提示添加DNS记录，就继续跳过。</p><p><img src="'+u+'" alt=""></p><p>CloudFlare会为我们的站点分配两台DNS服务器，将它们复制并保存下来。点击页面最下方的 <strong>继续</strong> 完成站点添加。</p><p><img src="'+b+'" alt=""> 在CloudFlare的操作暂告一段落，接下来我们进入阿里云域名列表页面：</p><p><a href="https://dc.console.aliyun.com/next/index#/domain-list/all" target="_blank" rel="noreferrer">https://dc.console.aliyun.com/next/index#/domain-list/all</a></p><p>在域名列表中找到我们刚刚购买的域名，点击 <strong>管理</strong>。</p><p><img src="'+f+'" alt=""></p><p>选择 <strong>DNS管理-DNS修改</strong> 。</p><p><img src="'+k+'" alt=""></p><p>填入刚刚CloudFlare分配的DNS地址并确认保存。现在我们可以离开阿里云回到CloudFlare了。 进入账号主页，点击 <strong>网站</strong>，选择我们刚刚添加的域名进入域名管理，然后点击 <strong>DNS记录</strong>。</p><p><img src="'+G+'" alt=""></p><p><img src="'+P+'" alt=""></p><p><img src="'+S+'" alt=""></p><p><img src="'+D+'" alt=""><a href="https://vercel.com/" target="_blank" rel="noreferrer">https://vercel.com/</a></p><p><img src="'+C+'" alt=""></p><p><img src="'+N+'" alt=""></p><p>填入完整的域名，点击 <strong>Add</strong>。Vercel将会绑定该域名，而后该页面会显示 <strong>Generating SSl Certificate...（正在生成SSL证书）</strong>。</p><p>该提示一般几十秒后便会消失。恭喜你，现在可以关掉代理，直接访问Gemini了！</p>',72),q=[x];function w(V,B,F,v,A,T){return r(),e("div",null,q)}const j=t(y,[["render",w]]);export{R as __pageData,j as default};
