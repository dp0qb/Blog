import{_ as s,c as a,o as n,a4 as p}from"./chunks/framework.D0jSIsaT.js";const e="/assets/originalBlog.DxT5ryCs.png",t="/assets/blogOnMobile.DBKtfEFs.jpg",b=JSON.parse('{"title":"将博客部署到本地","description":"","frontmatter":{},"headers":[],"relativePath":"articles/学习笔记/VitePress博客搭建记录/1.将博客部署到本地.md","filePath":"articles/学习笔记/VitePress博客搭建记录/1.将博客部署到本地.md"}'),i={name:"articles/学习笔记/VitePress博客搭建记录/1.将博客部署到本地.md"},o=p(`<h1 id="将博客部署到本地" tabindex="-1">将博客部署到本地 <a class="header-anchor" href="#将博客部署到本地" aria-label="Permalink to &quot;将博客部署到本地&quot;">​</a></h1><h2 id="_1-npm换源" tabindex="-1">1. npm换源 <a class="header-anchor" href="#_1-npm换源" aria-label="Permalink to &quot;1. npm换源&quot;">​</a></h2><p>由于npm源在中国大陆访问不稳定，我们将npm源替换为淘宝的镜像源：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> npm config set registry http://registry.npmmirror.com</span></span></code></pre></div><p>执行完成后查看是否设置成功：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> npm config get registry</span></span></code></pre></div><p>如果结果为<code>http://registry.npmmirror.com</code>，说明设置成功。</p><p>若要恢复默认源，可以执行：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm config set registry https://registry.npmjs.org</span></span></code></pre></div><h2 id="_2-新建项目" tabindex="-1">2. 新建项目 <a class="header-anchor" href="#_2-新建项目" aria-label="Permalink to &quot;2. 新建项目&quot;">​</a></h2><p>现在让我们新建一个文件夹，用来存放我们项目所用的文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mkdir Blog</span></span>
<span class="line"><span>cd Blog</span></span></code></pre></div><p>通过<code>cd</code>命令进入到Blog目录下后，为项目安装VitePress并添加依赖：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm add -D vitepress</span></span></code></pre></div><p>运行如下命令开始设置项目的基础信息：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npx vitepress init</span></span></code></pre></div><p>此时终端会依次显示以下内容：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌  Welcome to VitePress!</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◇  Where should VitePress initialize the config?</span></span>
<span class="line"><span>│（在哪里存放配置文件？输入docs即可。）</span></span>
<span class="line"><span>│  ./docs</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◇  Site title:</span></span>
<span class="line"><span>│（输入一个喜欢的项目名字，后续可以在配置文件中更改。）</span></span>
<span class="line"><span>│  My Awesome Project</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◇  Site description:</span></span>
<span class="line"><span>│（输入对项目的描述信息，随便写就行。）</span></span>
<span class="line"><span>│  A VitePress Site</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◇  Theme:</span></span>
<span class="line"><span>│（选择主题，用键盘↑↓键切换选项，回车确认。这里我们用默认的，也就是直接回车。）</span></span>
<span class="line"><span>│  ● Default Theme (Out of the box, good-looking docs)</span></span>
<span class="line"><span>│  ○ Default Theme + Customization</span></span>
<span class="line"><span>│  ○ Custom Theme</span></span>
<span class="line"><span>◇  Use TypeScript for config and theme files?</span></span>
<span class="line"><span>│（是否将TypeScriptpt用于配置和主题文件？直接回车确认即可。）</span></span>
<span class="line"><span>│  ● Yes / ○ No</span></span>
<span class="line"><span>◆  Add VitePress npm scripts to package.json?</span></span>
<span class="line"><span>│（是否将VitePress npm 脚本添加到package.json中？这里也是回车确认。）</span></span>
<span class="line"><span>│  ● Yes / ○ No</span></span>
<span class="line"><span>│  Done! Now run npm run docs:dev and start writing.</span></span>
<span class="line"><span>└</span></span></code></pre></div><p>至此一个<code>VitePress</code>项目就新建完成啦！</p><h2 id="_3-访问博客" tabindex="-1">3. 访问博客 <a class="header-anchor" href="#_3-访问博客" aria-label="Permalink to &quot;3. 访问博客&quot;">​</a></h2><p>让我们根据提示，试着启动服务：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm run docs:dev</span></span></code></pre></div><p>如果终端输出以下内容，说明后台服务已经成功启动：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&gt; docs:dev</span></span>
<span class="line"><span>&gt; vitepress dev docs</span></span>
<span class="line"><span>  vitepress v1.3.2</span></span>
<span class="line"><span>  ➜  Local:   http://localhost:5173/</span></span>
<span class="line"><span>  ➜  Network: use --host to expose</span></span>
<span class="line"><span>  ➜  press h to show help</span></span></code></pre></div><p>现在打开同一台电脑上的浏览器，输入<code>http://localhost:5173/</code>访问，你将看到如下画面： <img src="`+e+`" alt=""> 你也可以试着修改根目录的<code>package.json</code>文件，在<code>vitepress dev docs</code>后加上<code> --host 0.0.0.0</code>，如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;docs:dev&quot;: &quot;vitepress dev docs --host 0.0.0.0&quot;,</span></span></code></pre></div><p>在运行博客后台服务的终端按<code>Ctrl + C</code>终止其运行，然后再次用<code>npm run docs:dev</code>命令启动。</p><p>注意，现在 <code>Network:</code>后有新内容，其形式为：<code>http://ip:port/</code>，其中的<code>ip</code>对应你的电脑在局域网下的<code>ip</code>，<code>port</code>为程序运行的端口号。</p><p>你的实际<code>ip</code>很可能和我的 <strong>不同</strong>，只需以你自己的为准即可。 当然，如果你的电脑装有虚拟网卡或运用到虚拟网卡的软件，可能会出现多个 <code>Network</code>项。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&gt; docs:dev</span></span>
<span class="line"><span>&gt; vitepress dev docs --host 0.0.0.0</span></span>
<span class="line"><span>  vitepress v1.3.2</span></span>
<span class="line"><span>  ➜  Local:   http://localhost:5173/</span></span>
<span class="line"><span>  ➜  Network: http://192.168.123.123:5173/</span></span>
<span class="line"><span>  ➜  press h to show help</span></span></code></pre></div><p>现在你可以试着在同一局域网下的其它设备访问这个地址。</p><p>如果你分不清到底该访问哪个地址，你当然可以用<code>ping ip</code>的方式解决，不过最简单的方式是挨个试一遍。</p><p>看起来我们的博客在移动端上适配得也很好： <img src="`+t+'" alt=""> 恭喜你！你已经成功搭建了一个本地博客，并且在局域网下成功访问了它！</p><p>接下来我们将对博客的首页和导航栏等部分进行调整，让它更符合我们自己的审美。</p>',34),c=[o];function l(d,r,h,g,u,v){return n(),a("div",null,c)}const k=s(i,[["render",l]]);export{b as __pageData,k as default};
