import{_ as t,c as e,o as a,a4 as s}from"./chunks/framework.DrCKO7Ve.js";const b=JSON.parse('{"title":"Github 身份认证相关内容","description":"","frontmatter":{},"headers":[],"relativePath":"articles/学习笔记/Github使用相关/Github身份认证.md","filePath":"articles/学习笔记/Github使用相关/Github身份认证.md"}'),o={name:"articles/学习笔记/Github使用相关/Github身份认证.md"},n=s(`<h1 id="github-身份认证相关内容" tabindex="-1">Github 身份认证相关内容 <a class="header-anchor" href="#github-身份认证相关内容" aria-label="Permalink to &quot;Github 身份认证相关内容&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>这几天由于要出野外，台式电脑没法用，之前的itx又被我给拆了，处境一时间有点尴尬。本想再组一个itx，想想又感觉有点亏，毕竟平时我肯定不带用这玩意的。后来就将就着在平板的termux上用proot-distro装了个Ubuntut，把Git, Nvim, Filebrowser啥的都装上，将就用着，至少要写博客是没啥问题了。虽然好像是没啥问题了，用git push命令的时候却碰到了点小意外——git要求输入用户名和密码，输入完还提示失败。</p><h2 id="尝试-ssh-key" tabindex="-1">尝试：ssh key <a class="header-anchor" href="#尝试-ssh-key" aria-label="Permalink to &quot;尝试：ssh key&quot;">​</a></h2><p>凭着许久之前残存的一点记忆，我想起来不少Git配置的教程里都有提到ssh key认证的方式。于是我跟着教程生成密钥，并在Github账户设置页将公钥设置为认证key。很遗憾，虽然终端提示认证成功，push还是失败了。再次搜索，发现clone方式变了，要用<code>ssh</code>方式。那就再用ssh试试吧，clone过来发现居然没有<code>.git</code>文件夹，顿时有点懵。</p><p>再一回想，我之前在Windows上也一直都是用<code>git clone https://*</code>，没用过ssh认证方式，之前是怎么解决的呢？再说就算用ssh解决了，用着也不符合习惯。没办法，接着搜吧。最后找到Github官方的界面，一顿操作，才知道之前为啥没这么折腾。</p><h2 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h2><p>官方文档：</p><p><a href="https://docs.github.com/zh/get-started/getting-started-with-git/caching-your-github-credentials-in-git?platform=linux" target="_blank" rel="noreferrer">https://docs.github.com/zh/get-started/getting-started-with-git/caching-your-github-credentials-in-git?platform=linux</a></p><p>简单记录一下吧：</p><ol><li><p>在 <a href="https://github.com/settings/tokens/" target="_blank" rel="noreferrer">https://github.com/settings/tokens/</a> 申请一个Token，权限看自己需求勾选（<code>repo</code>, <code>read:org</code>, <code>workflow</code>这三项是必须的），把Token复制下来。</p></li><li><p>输入如下命令，依次选择额<code>Github.com</code>, <code>HTTPS</code>, <code>Paste an autoentication token</code>，最后把刚刚生成的Token粘贴上去就算完事。</p></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt install gh -y</span></span>
<span class="line"><span>gh auth login</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>What account do you want to log into? GitHub.com</span></span>
<span class="line"><span>What is your preferred protocol for Git operations on this host? HTTPS</span></span>
<span class="line"><span>How would you like to authenticate GitHub CLI? Paste an authentication token</span></span>
<span class="line"><span>Tip: you can generate a Personal Access Token here https://github.com/settings/tokens</span></span>
<span class="line"><span>The minimum required scopes are &#39;repo&#39;, &#39;read:org&#39;, &#39;workflow&#39;.</span></span>
<span class="line"><span>Paste your authentication token:</span></span></code></pre></div><p>认证完就可以正常使用啦！</p><p>现在回想起来，貌似是因为认证方式可以二选一，其中之一是通过浏览器认证。我当时可能是在Windows上用浏览器直接登录完成认证的？现在这个系统没装图形界面，浏览器啥的就更无从谈起了（顺带吐槽一下，我之前在termux里装的Ubuntu就没法用浏览器，鼓捣半天也没解决）。</p>`,15),i=[n];function c(p,r,h,l,d,u){return a(),e("div",null,i)}const k=t(o,[["render",c]]);export{b as __pageData,k as default};
